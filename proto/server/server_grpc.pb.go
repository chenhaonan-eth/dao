// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: server/server.proto

package server

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GreeterClient interface {
	// 沪深300市盈率
	GetSH300PE(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*SH300PEResponse, error)
	// 中美国债2、5、10、30年收益率
	GetBondZhUsRate(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*BondZhUsRateResponse, error)
	// 社会融资总量
	GetTotalSocialFlows(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*SocialFinancingFlowsResponse, error)
	// 社会融资存量
	GetSocialFinancingStock(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*SocialFinancingStockResponse, error)
	// 期货 伦铜:CAD
	GetFuturesForeignHist(ctx context.Context, in *FturesFoewignRequest, opts ...grpc.CallOption) (*FturesFoewignResponse, error)
	// PPI
	GetPpi(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*PpiResponse, error)
	// GDP
	GetGdp(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GdpResponse, error)
	// PMI
	GetPmi(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*PmiResponse, error)
	// CPI
	GetCpi(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CpiResponse, error)
	// 货币供应
	GetMoneySupply(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*MoneySupplyResponse, error)
	// 社会消费品零售总额
	GetConsumerGoodsRetail(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ConsumerGoodsRetailResponse, error)
	// 财新PMI
	GetCxPmi(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CxPmiResponse, error)
	// 工业生产增加值
	GetValueAddedOfIndustrialProduction(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ValueAddedOfIndustrialProductionResponse, error)
	// 全社会用电
	GetSocialElectricityConsumption(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*SocialElectricityConsumptionResponse, error)
	// 全社会客货运输量
	GetPassengerAndFreightTraffic(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*PassengerAndFreightTrafficResponse, error)
}

type greeterClient struct {
	cc grpc.ClientConnInterface
}

func NewGreeterClient(cc grpc.ClientConnInterface) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) GetSH300PE(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*SH300PEResponse, error) {
	out := new(SH300PEResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetSH300PE", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetBondZhUsRate(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*BondZhUsRateResponse, error) {
	out := new(BondZhUsRateResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetBondZhUsRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetTotalSocialFlows(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*SocialFinancingFlowsResponse, error) {
	out := new(SocialFinancingFlowsResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetTotalSocialFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetSocialFinancingStock(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*SocialFinancingStockResponse, error) {
	out := new(SocialFinancingStockResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetSocialFinancingStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetFuturesForeignHist(ctx context.Context, in *FturesFoewignRequest, opts ...grpc.CallOption) (*FturesFoewignResponse, error) {
	out := new(FturesFoewignResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetFuturesForeignHist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetPpi(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*PpiResponse, error) {
	out := new(PpiResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetPpi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetGdp(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GdpResponse, error) {
	out := new(GdpResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetGdp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetPmi(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*PmiResponse, error) {
	out := new(PmiResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetPmi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetCpi(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CpiResponse, error) {
	out := new(CpiResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetCpi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetMoneySupply(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*MoneySupplyResponse, error) {
	out := new(MoneySupplyResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetMoneySupply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetConsumerGoodsRetail(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ConsumerGoodsRetailResponse, error) {
	out := new(ConsumerGoodsRetailResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetConsumerGoodsRetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetCxPmi(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CxPmiResponse, error) {
	out := new(CxPmiResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetCxPmi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetValueAddedOfIndustrialProduction(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ValueAddedOfIndustrialProductionResponse, error) {
	out := new(ValueAddedOfIndustrialProductionResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetValueAddedOfIndustrialProduction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetSocialElectricityConsumption(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*SocialElectricityConsumptionResponse, error) {
	out := new(SocialElectricityConsumptionResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetSocialElectricityConsumption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetPassengerAndFreightTraffic(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*PassengerAndFreightTrafficResponse, error) {
	out := new(PassengerAndFreightTrafficResponse)
	err := c.cc.Invoke(ctx, "/server.Greeter/GetPassengerAndFreightTraffic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
// All implementations should embed UnimplementedGreeterServer
// for forward compatibility
type GreeterServer interface {
	// 沪深300市盈率
	GetSH300PE(context.Context, *emptypb.Empty) (*SH300PEResponse, error)
	// 中美国债2、5、10、30年收益率
	GetBondZhUsRate(context.Context, *emptypb.Empty) (*BondZhUsRateResponse, error)
	// 社会融资总量
	GetTotalSocialFlows(context.Context, *emptypb.Empty) (*SocialFinancingFlowsResponse, error)
	// 社会融资存量
	GetSocialFinancingStock(context.Context, *emptypb.Empty) (*SocialFinancingStockResponse, error)
	// 期货 伦铜:CAD
	GetFuturesForeignHist(context.Context, *FturesFoewignRequest) (*FturesFoewignResponse, error)
	// PPI
	GetPpi(context.Context, *emptypb.Empty) (*PpiResponse, error)
	// GDP
	GetGdp(context.Context, *emptypb.Empty) (*GdpResponse, error)
	// PMI
	GetPmi(context.Context, *emptypb.Empty) (*PmiResponse, error)
	// CPI
	GetCpi(context.Context, *emptypb.Empty) (*CpiResponse, error)
	// 货币供应
	GetMoneySupply(context.Context, *emptypb.Empty) (*MoneySupplyResponse, error)
	// 社会消费品零售总额
	GetConsumerGoodsRetail(context.Context, *emptypb.Empty) (*ConsumerGoodsRetailResponse, error)
	// 财新PMI
	GetCxPmi(context.Context, *emptypb.Empty) (*CxPmiResponse, error)
	// 工业生产增加值
	GetValueAddedOfIndustrialProduction(context.Context, *emptypb.Empty) (*ValueAddedOfIndustrialProductionResponse, error)
	// 全社会用电
	GetSocialElectricityConsumption(context.Context, *emptypb.Empty) (*SocialElectricityConsumptionResponse, error)
	// 全社会客货运输量
	GetPassengerAndFreightTraffic(context.Context, *emptypb.Empty) (*PassengerAndFreightTrafficResponse, error)
}

// UnimplementedGreeterServer should be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (UnimplementedGreeterServer) GetSH300PE(context.Context, *emptypb.Empty) (*SH300PEResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSH300PE not implemented")
}
func (UnimplementedGreeterServer) GetBondZhUsRate(context.Context, *emptypb.Empty) (*BondZhUsRateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBondZhUsRate not implemented")
}
func (UnimplementedGreeterServer) GetTotalSocialFlows(context.Context, *emptypb.Empty) (*SocialFinancingFlowsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTotalSocialFlows not implemented")
}
func (UnimplementedGreeterServer) GetSocialFinancingStock(context.Context, *emptypb.Empty) (*SocialFinancingStockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSocialFinancingStock not implemented")
}
func (UnimplementedGreeterServer) GetFuturesForeignHist(context.Context, *FturesFoewignRequest) (*FturesFoewignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFuturesForeignHist not implemented")
}
func (UnimplementedGreeterServer) GetPpi(context.Context, *emptypb.Empty) (*PpiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPpi not implemented")
}
func (UnimplementedGreeterServer) GetGdp(context.Context, *emptypb.Empty) (*GdpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGdp not implemented")
}
func (UnimplementedGreeterServer) GetPmi(context.Context, *emptypb.Empty) (*PmiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPmi not implemented")
}
func (UnimplementedGreeterServer) GetCpi(context.Context, *emptypb.Empty) (*CpiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCpi not implemented")
}
func (UnimplementedGreeterServer) GetMoneySupply(context.Context, *emptypb.Empty) (*MoneySupplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMoneySupply not implemented")
}
func (UnimplementedGreeterServer) GetConsumerGoodsRetail(context.Context, *emptypb.Empty) (*ConsumerGoodsRetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConsumerGoodsRetail not implemented")
}
func (UnimplementedGreeterServer) GetCxPmi(context.Context, *emptypb.Empty) (*CxPmiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCxPmi not implemented")
}
func (UnimplementedGreeterServer) GetValueAddedOfIndustrialProduction(context.Context, *emptypb.Empty) (*ValueAddedOfIndustrialProductionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValueAddedOfIndustrialProduction not implemented")
}
func (UnimplementedGreeterServer) GetSocialElectricityConsumption(context.Context, *emptypb.Empty) (*SocialElectricityConsumptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSocialElectricityConsumption not implemented")
}
func (UnimplementedGreeterServer) GetPassengerAndFreightTraffic(context.Context, *emptypb.Empty) (*PassengerAndFreightTrafficResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPassengerAndFreightTraffic not implemented")
}

// UnsafeGreeterServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GreeterServer will
// result in compilation errors.
type UnsafeGreeterServer interface {
	mustEmbedUnimplementedGreeterServer()
}

func RegisterGreeterServer(s grpc.ServiceRegistrar, srv GreeterServer) {
	s.RegisterService(&Greeter_ServiceDesc, srv)
}

func _Greeter_GetSH300PE_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetSH300PE(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetSH300PE",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetSH300PE(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetBondZhUsRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetBondZhUsRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetBondZhUsRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetBondZhUsRate(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetTotalSocialFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetTotalSocialFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetTotalSocialFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetTotalSocialFlows(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetSocialFinancingStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetSocialFinancingStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetSocialFinancingStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetSocialFinancingStock(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetFuturesForeignHist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FturesFoewignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetFuturesForeignHist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetFuturesForeignHist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetFuturesForeignHist(ctx, req.(*FturesFoewignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetPpi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetPpi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetPpi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetPpi(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetGdp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetGdp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetGdp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetGdp(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetPmi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetPmi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetPmi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetPmi(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetCpi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetCpi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetCpi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetCpi(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetMoneySupply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetMoneySupply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetMoneySupply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetMoneySupply(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetConsumerGoodsRetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetConsumerGoodsRetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetConsumerGoodsRetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetConsumerGoodsRetail(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetCxPmi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetCxPmi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetCxPmi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetCxPmi(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetValueAddedOfIndustrialProduction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetValueAddedOfIndustrialProduction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetValueAddedOfIndustrialProduction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetValueAddedOfIndustrialProduction(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetSocialElectricityConsumption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetSocialElectricityConsumption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetSocialElectricityConsumption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetSocialElectricityConsumption(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetPassengerAndFreightTraffic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetPassengerAndFreightTraffic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Greeter/GetPassengerAndFreightTraffic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetPassengerAndFreightTraffic(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// Greeter_ServiceDesc is the grpc.ServiceDesc for Greeter service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Greeter_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "server.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSH300PE",
			Handler:    _Greeter_GetSH300PE_Handler,
		},
		{
			MethodName: "GetBondZhUsRate",
			Handler:    _Greeter_GetBondZhUsRate_Handler,
		},
		{
			MethodName: "GetTotalSocialFlows",
			Handler:    _Greeter_GetTotalSocialFlows_Handler,
		},
		{
			MethodName: "GetSocialFinancingStock",
			Handler:    _Greeter_GetSocialFinancingStock_Handler,
		},
		{
			MethodName: "GetFuturesForeignHist",
			Handler:    _Greeter_GetFuturesForeignHist_Handler,
		},
		{
			MethodName: "GetPpi",
			Handler:    _Greeter_GetPpi_Handler,
		},
		{
			MethodName: "GetGdp",
			Handler:    _Greeter_GetGdp_Handler,
		},
		{
			MethodName: "GetPmi",
			Handler:    _Greeter_GetPmi_Handler,
		},
		{
			MethodName: "GetCpi",
			Handler:    _Greeter_GetCpi_Handler,
		},
		{
			MethodName: "GetMoneySupply",
			Handler:    _Greeter_GetMoneySupply_Handler,
		},
		{
			MethodName: "GetConsumerGoodsRetail",
			Handler:    _Greeter_GetConsumerGoodsRetail_Handler,
		},
		{
			MethodName: "GetCxPmi",
			Handler:    _Greeter_GetCxPmi_Handler,
		},
		{
			MethodName: "GetValueAddedOfIndustrialProduction",
			Handler:    _Greeter_GetValueAddedOfIndustrialProduction_Handler,
		},
		{
			MethodName: "GetSocialElectricityConsumption",
			Handler:    _Greeter_GetSocialElectricityConsumption_Handler,
		},
		{
			MethodName: "GetPassengerAndFreightTraffic",
			Handler:    _Greeter_GetPassengerAndFreightTraffic_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server/server.proto",
}
